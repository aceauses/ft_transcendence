secrets:
  postgres_password:
    file: ./secrets/postgres_password
  pgadmin_password:
    file: ./secrets/pgadmin_password
  oauth_api_secret:
    file: ./secrets/oauth_api_secret

x-global-env: &default-env
  env_file:
    - ./secrets/.env

services:
  postgres:
    image: postgres:17.0-alpine3.20
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    secrets:
      - postgres_password
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres || exit 1" ]
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 15s
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  backend:
    build: ./backend
    <<: *default-env
    volumes:
      - ./backend:/code
    secrets:
      - postgres_password
      - oauth_api_secret
    environment:
      - container=docker
    ports:
      - "8000:8000"
    restart: always
    entrypoint: /code/django.sh
    # depends_on:
    #   postgres:
    #     condition: service_healthy
  pgadmin:
    image: dpage/pgadmin4:latest
    <<: *default-env
    environment:
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin_password
    secrets:
      - pgadmin_password
    ports:
      - 5050:80

volumes:
  postgres:
